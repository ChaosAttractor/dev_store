server {
  listen 80;
  server_name localhost;

  error_log  /var/log/nginx/nginx_error.log;
  access_log /var/log/nginx/nginx_access.log;

  location /keycloak/ {
    proxy_set_header    Host               $host;
    proxy_set_header    X-Real-IP          $remote_addr;
    proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Host   $host;
    proxy_set_header    X-Forwarded-Server $host;
    proxy_set_header    X-Forwarded-Port   $server_port;
    proxy_set_header    X-Forwarded-Proto  $scheme;
#     proxy_set_header    ssl-client-cert    $ssl_client_escaped_cert;
    proxy_connect_timeout   2s;
    proxy_pass http://keycloak:8080/;
    proxy_buffer_size          128k;
    proxy_buffers              4 256k;
    proxy_busy_buffers_size    256k;
  }

  location ~* ^/status$ {
    internal;
    if ($request_method = OPTIONS) {
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 204;
    }
    rewrite ^.*$ /auth/status break;
    proxy_pass_request_headers off;
    proxy_set_header Cookie $http_cookie;
    proxy_set_header Host $http_host;
    proxy_set_header Authorization $http_authorization;
    proxy_set_header X-Original-RequestId $request_id;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_no_cache 1;
    proxy_pass http://svc_store:8080;
  }

  location ~* ^(?s)/api/v1/store/auth/status(/.*)?$ {
      rewrite ^(?s)/(api/v1/store)(/(.*))?$ /$3 break;

      set $mycookie $http_cookie;
      proxy_set_header X-Original-RequestId $request_id;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_no_cache 1;
      proxy_set_header SignedCookie $mycookie;
      proxy_hide_header 'authorization';
      proxy_hide_header 'X-User';
      proxy_pass http://svc_store:8080;
  }

  location ~* ^(?s)/api/v1/store/(registration|auth/login)(/.*)?$ {
    rewrite ^(?s)/(api/v1/store)(/(.*))?$ /$3 break;

    proxy_set_header X-Original-RequestId $request_id;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_no_cache 1;
    proxy_pass http://svc_store:8080;
 }

 location ~* ^(?s)/api/v1/store(/.*)?$ {
    rewrite ^(?s)/(api/v1/store)(/(.*))?$ /$3 break;

    auth_request /status;
    auth_request_set $auth_authorization $upstream_http_authorization;
    auth_request_set $new_cookie $sent_http_set_cookie;
    auth_request_set $user $upstream_http_x_user;
    auth_request_set $retry $upstream_http_x_retry;
    proxy_set_header X-User $user;
    proxy_no_cache 1;
    add_header Set-Cookie $new_cookie always;
    add_header X-Retry $retry always;
    proxy_set_header Host $http_host;
    proxy_set_header 'authorization' $auth_authorization;
    proxy_set_header Authroization $auth_authorization;
    proxy_set_header X-Original-RequestId $request_id;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://svc_store:8080;
 }
}

server {
  listen 80;
  server_name minio.localhost;

  ignore_invalid_headers off;
  # Allow any size file to be uploaded.
  # Set to a value such as 1000m; to restrict file size to a specific value
  client_max_body_size 0;
  proxy_buffering off;
  proxy_request_buffering off;

  location / {
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_connect_timeout 300;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    chunked_transfer_encoding off;

    proxy_pass         http://minio:9000/;
    proxy_redirect     off;
  }

  location /console {
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-NginX-Proxy true;
    proxy_connect_timeout 300;

    # To support websocket
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    real_ip_header X-Real-IP;

    chunked_transfer_encoding off;

    rewrite /console(/|$)(.*) /$2  break;
    proxy_pass         http://minio:9001/;
	proxy_redirect     off;
  }
}
